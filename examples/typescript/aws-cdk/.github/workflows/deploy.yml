# Generated by github-actions-cdk, DO NOT EDIT DIRECTLY!

# Deployed stacks from this pipeline:
# - GithubActionsStack
# - US-FunctionStack
# - US-BucketStack
# - US-DockerStack
# - EU-FunctionStack
# - EU-BucketStack
# - EU-DockerStack

name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-synth:
    name: Synthesize
    runs-on: ubuntu-latest
    env: {}
    permissions:
      contents: read
      id-token: write
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
      - id: pre
        run: echo "Hello, world!"
      - id: build
        name: Build
        run: |-
          npm install
          npm run build
      - id: upload
        name: Upload cdk.out
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
          include-hidden-files: true
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-DockerAsset1
        run: /bin/bash cdk.out/publish-assets-Assets-DockerAsset1.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset1
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset1.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset2
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset2.sh
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset3
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset3.sh
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset4
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset4.sh
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset5
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset5.sh
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset6
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset6.sh
  Assets-FileAsset7:
    name: Publish Assets Assets-FileAsset7
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset7
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset7.sh
  Assets-FileAsset8:
    name: Publish Assets Assets-FileAsset8
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash-1: ${{ steps.publish.outputs.asset-hash-1 }}
    steps:
      - id: DownloadArtifact
        name: Download cdk.out
        uses: actions/download-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
      - id: install
        name: Install
        run: npm install --no-save cdk-assets
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: publish
        name: Publish Assets-FileAsset8
        run: /bin/bash cdk.out/publish-assets-Assets-FileAsset8.sh
  Prod-EU-BucketStack-Deploy:
    name: Deploy EUBucketStack0F6FDF2E
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset6
      - Assets-FileAsset2
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-eu-west-2
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: EU-BucketStack
          template: https://cdk-hnb659fds-assets-123456789012-eu-west-2.s3.eu-west-2.amazonaws.com/${{
            needs.Assets-FileAsset6.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-eu-west-2
  Prod-EU-DockerStack-Deploy:
    name: Deploy EUDockerStackA3D9B748
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset7
      - Assets-DockerAsset1
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-eu-west-2
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: EU-DockerStack
          template: https://cdk-hnb659fds-assets-123456789012-eu-west-2.s3.eu-west-2.amazonaws.com/${{
            needs.Assets-FileAsset7.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-eu-west-2
  Prod-US-hello-world:
    name: Hello World
    runs-on: ubuntu-latest
    needs:
      - Build-synth
    steps:
      - id: echo
        run: echo "Hello world"
  Prod-US-BucketStack-Deploy:
    name: Deploy USBucketStack1256B33F
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset1
      - Assets-FileAsset2
      - Prod-US-hello-world
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-us-east-1
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: US-BucketStack
          template: https://cdk-hnb659fds-assets-123456789012-us-east-1.s3.us-east-1.amazonaws.com/${{
            needs.Assets-FileAsset1.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-us-east-1
  Prod-US-DockerStack-Deploy:
    name: Deploy USDockerStackDABEB1C8
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset3
      - Assets-DockerAsset1
      - Prod-US-hello-world
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-us-east-1
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: US-DockerStack
          template: https://cdk-hnb659fds-assets-123456789012-us-east-1.s3.us-east-1.amazonaws.com/${{
            needs.Assets-FileAsset3.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-us-east-1
  Prod-EU-FunctionStack-Deploy:
    name: Deploy EUFunctionStackAAE89C93
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset8
      - Assets-FileAsset5
      - Prod-EU-BucketStack-Deploy
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-eu-west-2
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: EU-FunctionStack
          template: https://cdk-hnb659fds-assets-123456789012-eu-west-2.s3.eu-west-2.amazonaws.com/${{
            needs.Assets-FileAsset8.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-eu-west-2
  Prod-US-FunctionStack-Deploy:
    name: Deploy USFunctionStackFE5EB3B1
    runs-on: ubuntu-latest
    needs:
      - Build-synth
      - Assets-FileAsset4
      - Assets-FileAsset5
      - Prod-US-BucketStack-Deploy
      - Prod-US-hello-world
    permissions:
      contents: read
      id-token: write
    steps:
      - id: authenticate
        name: Authenticate Via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::<account-id>:role/GitHubActionsRole
      - id: assume-role
        name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-deploy-role-123456789012-us-east-1
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: US-FunctionStack
          template: https://cdk-hnb659fds-assets-123456789012-us-east-1.s3.us-east-1.amazonaws.com/${{
            needs.Assets-FileAsset4.outputs.asset-hash-1 }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:${AWS::Partition}:iam::123456789012:role/cdk-hnb659fds-cfn-exec-role-123456789012-us-east-1
